{"version":3,"sources":["components/Header.js","containers/Container.js","components/LaunchBox.js","components/Loading.js","pages/HomePage/Pagination.js","queries/index.js","hooks/useRouterQuery.js","pages/HomePage/index.js","pages/AboutPage/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","linkClassName","activeClassName","className","to","src","alt","Container","children","LaunchBox","min","max","data","mission_name","launch_success","links","launch_date_local","uriImg","flickr_images","length","Math","floor","random","replace","textDetailt","moment","format","wikipedia","href","target","Loading","Pagination","current","pages","useMemo","Array","fill","Object","keys","map","x","index","Number","key","GET_ABOUT","gql","GET_LAUNCH","useLocation","require","useRouterQuery","URLSearchParams","search","HomePage","urlPage","get","useState","offset","setOffset","useQuery","variables","error","loading","useEffect","React","Children","toArray","launchesPast","launch","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","AboutPage","About","company","name","summary","ceo","founded","valuation","twitter","flickr","website","App","exact","path","component","Boolean","window","location","hostname","match","client","ApolloClient","uri","WithApollo","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.594223b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nexport default function Header() {\r\n  const linkClassName =\r\n    \"inline-block ml-3 px-4 py-1 text-primary border transition-all duration-500 ease-in-out border-transparent hover:border-grey\";\r\n  const activeClassName =\r\n    \"transition-all duration-500 ease-in-out border-primary\";\r\n\r\n  return (\r\n    <header className=\"px-4 py-4 shadow-md w-full bg-white\">\r\n      <div className=\"container mx-auto flex justify-between\">\r\n        <Link to=\"/home\">\r\n          <img\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/de/SpaceX-Logo.svg/1280px-SpaceX-Logo.svg.png\"\r\n            alt=\"spacex_logo\"\r\n            className=\"w-64\"\r\n          />\r\n        </Link>\r\n        <div className=\"hidden md:block\">\r\n          <NavLink\r\n            to=\"/home\"\r\n            className={linkClassName}\r\n            activeClassName={activeClassName}\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/about\"\r\n            className={linkClassName}\r\n            activeClassName={activeClassName}\r\n          >\r\n            About SpaceX\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\n\r\nexport default function Container({ children }) {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"container mx-auto scrolling-auto px-4 lg:px-0\">\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst randomIntFromInterval = (min, max) =>\r\n  Math.floor(Math.random() * (max - min + 1) + min);\r\n\r\nexport default function LaunchBox({ data }) {\r\n  const { mission_name, launch_success, links, launch_date_local } = data;\r\n\r\n  const uriImg =\r\n    links?.flickr_images.length === 0\r\n      ? \"https://cdn.images.express.co.uk/img/dynamic/151/590x/spacex-launch-today-how-to-see-spacex-starlink-uk-tonight-1301292.jpg?r=1593156651221\"\r\n      : links.flickr_images[\r\n          randomIntFromInterval(0, links.flickr_images.length - 1)\r\n        ].replace(\"o.jpg\", \"w.jpg\");\r\n\r\n  return (\r\n    <article className=\"w-full md:w-1/4 px-2 mb-10\">\r\n      <div className=\"shadow-lg rounded-md overflow-hidden\">\r\n        {links && (\r\n          <img\r\n            src={uriImg}\r\n            alt=\"launch\"\r\n            className=\"w-full h-64 md:h-32 lg:h-64 object-cover bg-gray-300\"\r\n          />\r\n        )}\r\n        <div className=\"p-2 flex flex-col\">\r\n          {/* name */}\r\n          <p\r\n            className={`text-base truncate mb-1 ${\r\n              launch_success ? \"text-green-500\" : \"text-red-600\"\r\n            }`}\r\n          >\r\n            {mission_name}\r\n          </p>\r\n\r\n          {/* description */}\r\n          <p className=\"text-sm text-gray-700 self-end text-detail text-left\">\r\n            {textDetailt}\r\n          </p>\r\n          <div className=\"flex justify-between items-center mt-2\">\r\n            {/* launch date */}\r\n            <p className=\"text-xs text-gray-600 p-1\">\r\n              {moment(launch_date_local).format(\"MMMM Do YYYY, h:mm a\")}\r\n            </p>\r\n            {/* wikipedia */}\r\n            {links.wikipedia && (\r\n              <a\r\n                href={links.wikipedia}\r\n                target=\"_blanck\"\r\n                className=\"text-xs text-gray-500 p-1 self-end\"\r\n              >\r\n                Read more...\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nconst textDetailt =\r\n  \"SpaceX launches GPS Block III Space Vehicle 03 from SLC-40, Cape Canaveral AFS aboard a Falcon 9. GPS III is owned and operated by the US Air Force and produced by Lockheed Martin. This is the third GPS III satellite and the second launched by SpaceX. The satellite will be delivered into a MEO transfer orbit. The booster for this mission is expected to land on an ASDS.\";\r\n","import React from \"react\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"h-64 w-full flex justify-center items-center\">\r\n      <div className=\"lds-spinner mb-10 w-10 h-10\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Pagination({ current }) {\r\n  const pages = useMemo(() => new Array(3).fill(\"\"), []);\r\n  const buttonClassName =\r\n    \"rounded border border-primary w-6 h-6 text-xs ml-3 focus:outline-none transition duration-500 text-center\";\r\n\r\n  return (\r\n    <div className=\"w-full flex justify-end\">\r\n      {Object.keys(pages).map((x) => {\r\n        let index = Number(x) + 1;\r\n        return (\r\n          <Link\r\n            to={`/home?page=${index}`}\r\n            className={`${buttonClassName} ${\r\n              current === index\r\n                ? \"bg-primary text-white\"\r\n                : \"bg-white text-primary\"\r\n            }`}\r\n            key={x}\r\n          >\r\n            {index}\r\n          </Link>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_ABOUT = gql`\r\n  {\r\n    company {\r\n      ceo\r\n      founded\r\n      launch_sites\r\n      links {\r\n        flickr\r\n        twitter\r\n        website\r\n      }\r\n      name\r\n      summary\r\n      valuation\r\n    }\r\n    launchesPast(limit: 1, offset: 3) {\r\n      links {\r\n        flickr_images\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_LAUNCH = gql`\r\n  query Launch($offset: Int!) {\r\n    launchesPast(limit: 12, offset: $offset) {\r\n      mission_name\r\n      launch_date_local\r\n      launch_success\r\n      links {\r\n        wikipedia\r\n        flickr_images\r\n      }\r\n      details\r\n    }\r\n  }\r\n`;\r\n","const { useLocation } = require(\"react-router-dom\");\r\n\r\nfunction useRouterQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default useRouterQuery;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../../containers\";\r\nimport LaunchBox from \"../../components/LaunchBox\";\r\nimport Loading from \"../../components/Loading\";\r\nimport Pagination from \"./Pagination\";\r\nimport { GET_LAUNCH } from \"../../queries\";\r\nimport useRouterQuery from \"../../hooks/useRouterQuery\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nexport default function HomePage() {\r\n  let urlPage = useRouterQuery().get(\"page\") ?? 1;\r\n  const [offset, setOffset] = useState(0);\r\n  const { error, data, loading } = useQuery(GET_LAUNCH, {\r\n    variables: { offset: offset },\r\n  });\r\n\r\n  useEffect(() => {\r\n    let nextOffset = urlPage === 1 ? 0 : (urlPage - 1) * 10;\r\n    setOffset(nextOffset);\r\n  }, [urlPage]);\r\n\r\n  if (error) return `Error! ${error}`;\r\n  return (\r\n    <Container>\r\n      <section className=\"flex flex-wrap justify-between py-5\">\r\n        {loading ? (\r\n          <Loading />\r\n        ) : error ? (\r\n          `Error! ${error}`\r\n        ) : (\r\n          React.Children.toArray(\r\n            data.launchesPast.map((launch) => <LaunchBox data={launch} />)\r\n          )\r\n        )}\r\n\r\n        <Pagination current={Number(urlPage)} />\r\n      </section>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Container from \"../../containers/Container\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { GET_ABOUT } from \"../../queries\";\r\n\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n  minimumFractionDigits: 2,\r\n});\r\n\r\nexport default function AboutPage() {\r\n  const { data, loading } = useQuery(GET_ABOUT);\r\n  return (\r\n    <Container>\r\n      <section className=\"flex flex-wrap justify-between py-5\">\r\n        {loading ? <Loading /> : <About data={data} />}\r\n      </section>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst About = ({ data }) => (\r\n  <div className=\"w-full flex flex-col md:flex-row flex-wrap\">\r\n    <div className=\"w-full md:w-1/2 md:pr-10\">\r\n      {/* ABOUT SPACEX */}\r\n      <h3 className=\"text-primary font-bold text-xl mb-4\">\r\n        Whats {data.company.name}?\r\n      </h3>\r\n      <p className=\"text-gray-600 mb-8\">{data.company.summary}</p>\r\n      <p className=\"text-gray-600\">\r\n        CEO & founder: <span className=\"font-bold\">{data.company.ceo}</span>\r\n      </p>\r\n      <p className=\"text-gray-600\">\r\n        Founded: <span className=\"font-bold\">{data.company.founded}</span>\r\n      </p>\r\n\r\n      <p className=\"text-gray-600\">\r\n        Valuation:{\" \"}\r\n        <span className=\"font-bold\">\r\n          {formatter.format(data.company.valuation)}\r\n        </span>\r\n      </p>\r\n\r\n      {/* SOCIAL */}\r\n      <p className=\"text-gray-700 mt-4\">Learn more at:</p>\r\n      <div className=\"flex mb-6 md:mb-0\">\r\n        <p className=\"text-primary mr-2\">\r\n          <a className=\"font-bold\" href={data.company.links.twitter}>\r\n            Twitter\r\n          </a>\r\n        </p>\r\n\r\n        <p className=\"text-primary mr-2\">\r\n          <a className=\"font-bold\" href={data.company.links.flickr}>\r\n            Flickr\r\n          </a>\r\n        </p>\r\n        <p className=\"text-primary\">\r\n          <a className=\"font-bold\" href={data.company.links.website}>\r\n            {data.company.links.website\r\n              .replace(\"https://\", \"\")\r\n              .replace(\"/\", \"\")}\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    {/* ELON MUSK */}\r\n    <div className=\"w-full md:w-1/2 md:pl-10 flex justify-center items-center \">\r\n      <img\r\n        alt=\"elon_musk\"\r\n        src=\"https://imagenes.20minutos.es/files/image_656_370/files/fp/uploads/imagenes/2020/05/12/elon-musk-director-de-testa-y-spacex.r_d.302-72-11389.jpeg\"\r\n        className=\"w-full object-cover\"\r\n      />\r\n    </div>\r\n    {/* IMAGES */}\r\n    <div className=\"w-full lg:pr-10 flex flex-wrap mt-10\">\r\n      {React.Children.toArray(\r\n        Object.keys(data.launchesPast[0].links.flickr_images).map((x) => {\r\n          let src = data.launchesPast[0].links.flickr_images[x].replace(\r\n            \"o.jpg\",\r\n            \"w.jpg\"\r\n          );\r\n          return (\r\n            <img\r\n              alt=\"spacex\"\r\n              src={src}\r\n              className=\"w-1/2 md:w-1/4 object-cover\"\r\n            />\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport \"./css/tailwind.output.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\n\nlet client = new ApolloClient({\n  uri: \"https://api.spacex.land/graphql/\",\n});\n\nconst WithApollo = () => (\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <WithApollo />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}